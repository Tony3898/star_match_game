{"version":3,"sources":["components/Star.jsx","components/PlayNumber.jsx","components/PlayAgain.jsx","components/Game.jsx","components/App.jsx","index.js"],"names":["Star","range","min","max","Array","from","length","_","i","count","this","props","map","r","key","className","Component","PlayNumber","colors","available","used","wrong","candidate","number","status","onClick","style","backgroundColor","PlayAgain","gameStatus","color","toString","Game","random","Math","floor","sum","arr","reduce","acc","curr","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push","candidateWrong","state","stars","candidateNumbers","availableNumbers","secondsLeft","onNumberClick","currentNumber","currentStatus","newCandidatesNumbers","filter","c","setState","newAvailableNumbers","a","includes","newStars","numberStatus","n","checkTime","self","timerId","setInterval","bind","clearTimeout","startGame","checkGameStatus","App","updateGameId","gameId","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b75bb2c1.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Star extends Component {\n\n  range = (min , max ) => {\n    return Array.from({length: max - min + 1}, (_, i) => min + i)\n  }\n\n  render() {\n    const {count} = this.props\n    return (\n        <>\n          {\n            this.range(1, count).map(r => <div key={r} className={'star'}/>)\n          }\n        </>\n    )\n  }\n\n}\n\nexport default Star","import React, {Component} from \"react\";\n\nclass PlayNumber extends Component {\n\n  // Color Theme\n  colors = {\n    available: 'lightgray',\n    used: 'lightgreen',\n    wrong: 'lightcoral',\n    candidate: 'deepskyblue',\n  };\n\n  render() {\n    const {number, status, onClick} = this.props\n    return (\n        <>\n          <button className={'number'} onClick={() => onClick(number, status)}\n                  style={{backgroundColor: this.colors[status]}}>{number}\n          </button>\n        </>\n    )\n  }\n\n}\n\nexport default PlayNumber","import React, {Component} from \"react\";\n\nclass PlayAgain extends Component {\n\n  render() {\n    const {onClick, gameStatus} = this.props\n    let message = {\n      '1': 'Active',\n      '10': 'Won',\n      \"-10\": 'Lost'\n    }\n    return (\n        <>\n          <h1 className={'message'}\n               style={{color: gameStatus === 10 ? 'green' : 'red'}}>{message[gameStatus.toString()]}</h1>\n          <button className={'game-done'} onClick={onClick}>Play Again</button>\n        </>\n    )\n  }\n}\n\nexport default PlayAgain","import React, {Component} from 'react';\nimport '../assets/css/style.css';\nimport Star from \"./Star\";\nimport PlayNumber from \"./PlayNumber\";\nimport PlayAgain from \"./PlayAgain\";\n\nclass Game extends Component {\n\n  constructor(props) {\n    super(props);\n    this.timerId = null\n    this.state = {\n      stars: this.random(1, 9),\n      availableNumbers: this.range(1, 9),\n      candidateNumbers: [],\n      secondsLeft: 10\n    }\n  }\n\n  range = (min, max) => {\n    return Array.from({length: max - min + 1}, (_, i) => min + i)\n  }\n\n  random = (min, max) => min + Math.floor(Math.random() * (max - min + 1))\n\n  sum = (arr) => arr.reduce((acc, curr) => acc + curr, 0)\n\n  randomSumIn = (arr, max) => {\n    const sets = [[]];\n    const sums = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0, len = sets.length; j < len; j++) {\n        const candidateSet = sets[j].concat(arr[i]);\n        const candidateSum = this.sum(candidateSet);\n        if (candidateSum <= max) {\n          sets.push(candidateSet);\n          sums.push(candidateSum);\n        }\n      }\n    }\n    return sums[this.random(0, sums.length - 1)];\n  }\n\n  candidateWrong = () => {\n    const {stars, candidateNumbers} = this.state\n    return this.sum(candidateNumbers) > stars\n  }\n\n  gameStatus = () => {\n    let {availableNumbers, secondsLeft} = this.state\n    return availableNumbers.length === 0 ? 10 : secondsLeft <= 0 ? -10 : 1\n  }\n\n  onNumberClick = (currentNumber, currentStatus) => {\n    let {stars, availableNumbers, candidateNumbers} = this.state\n    if (currentStatus !== 'used' && this.gameStatus() === 1) {\n      let newCandidatesNumbers = currentStatus === 'available' ? candidateNumbers.concat(currentNumber) : candidateNumbers.filter(c => c !== currentNumber)\n      if (this.sum(newCandidatesNumbers) !== stars) {\n        this.setState({candidateNumbers: newCandidatesNumbers})\n      } else {\n        let newAvailableNumbers = availableNumbers.filter(a => !newCandidatesNumbers.includes(a))\n        let newStars = this.randomSumIn(newAvailableNumbers, 9)\n        this.setState({availableNumbers: newAvailableNumbers, candidateNumbers: [], stars: newStars})\n      }\n    }\n  }\n\n  numberStatus = (n) => {\n    const {availableNumbers, candidateNumbers} = this.state\n    if (!availableNumbers.includes(n))\n      return 'used'\n    if (candidateNumbers.includes(n))\n      return this.candidateWrong() ? 'wrong' : 'candidate'\n    return 'available'\n  }\n\n  /*onGameDone = () => {\n    this.setState({availableNumbers: this.range(1, 9), candidateNumbers: [], stars: this.random(1, 9), secondsLeft: 10})\n  }*/\n\n  checkTime = () => {\n    let self = this;\n    let {secondsLeft, availableNumbers} = this.state\n    if (secondsLeft > 0 && availableNumbers.length) {\n      self.setState({secondsLeft: secondsLeft - 1})\n    }\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(this.checkTime.bind(this), 1000)\n  }\n\n  componentWillMount() {\n    clearTimeout(this.timerId)\n  }\n\n  render() {\n    const {stars, secondsLeft} = this.state\n    const {startGame} = this.props\n    let checkGameStatus = this.gameStatus()\n    return (\n        <div className=\"game\">\n          <div className=\"help\">\n            Pick 1 or more numbers that sum to the number of stars\n          </div>\n          <div className={'body'}>\n            <div className={'left'}>\n              {checkGameStatus !== 1 ? (<PlayAgain onClick={startGame} gameStatus={checkGameStatus}/>) : (\n                  <Star count={stars}/>)}\n            </div>\n            <div className={'right'}>\n              {\n                this.range(1, 9).map(n =>\n                    <PlayNumber key={n} number={n} status={this.numberStatus(n)} onClick={this.onNumberClick}/>\n                )\n              }\n            </div>\n          </div>\n          <div className=\"timer\">Time Remaining: {secondsLeft}</div>\n        </div>\n    );\n  }\n\n\n}\n\nexport default Game;\n","import React, {Component} from \"react\";\nimport Game from \"./Game\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameId: 0\n    }\n  }\n\n  updateGameId = () => {\n    const {gameId} = this.state\n    console.log(gameId)\n    this.setState({gameId: gameId + 1})\n  }\n\n  render() {\n    const {gameId} = this.state\n    return (\n        <Game key={gameId} startGame={this.updateGameId}/>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}